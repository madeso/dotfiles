# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# gaps settings
set $inner_gaps 10
set $outer_gaps 10

smart_gaps on
smart_borders on
for_window [class="^.*"] border pixel 2
gaps inner $inner_gaps
gaps outer $outer_gaps

# don't change the active window when moving the mouse
focus_follows_mouse no

#use u and U to toggle window title, and hide it per default for non-floating windows
bindsym $mod+u border none
bindsym $mod+Shift+u border normal
# default_border none
# default_floating_border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
font pango:Noto Sans,Material Design Icons, 8

# begin config colors
# todo: change to aliased color names instead of referencing the solarized names
set $bg-color            {{base2}}
set $inactive-bg-color   {{base3}}
set $text-color          {{base01}}
set $inactive-text-color {{base00}}
set $urgent-text-color   {{red}}
set $urgent-bg-color     {{base2}}
set $indicator           {{base2}}
set $border              {{base01}}
set $black               #000000


# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show drun
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod++Shift+w layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+e layout toggle split

bindsym $mod+w layout tabbed
#bindsym $mod+t exec i3-sensible-terminal -e ranger
bindsym $mod+e exec thunar

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Tab focus mode_toggle

bindsym $mod+Shift+S exec ~/dev/dotfiles/scripts/maim-snip.sh
bindsym Print exec ~/dev/dotfiles/tools/maim-active-window.sh
bindsym $mod+space exec ~/dev/dotfiles/tools/switch-kblayout.sh
bindsym $mod+m exec ~/dev/dotfiles/fancylock.sh
# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:4"
set $ws5 "5:5"
set $ws6 "6:6"
set $ws7 "7:"
set $ws8 "8:"
set $ws9 "9:"
set $ws10 "10:"
set $ws11 "11: "

workspace $ws1 output primary
workspace $ws2 output primary
workspace $ws3 output primary
workspace $ws4 output primary
workspace $ws5 output primary
workspace $ws6 output primary
workspace $ws7 output primary
workspace $ws8 output primary
workspace $ws9 output HDMI-1 VGA-0 primary
workspace $ws10 output primary
workspace $ws11 output primary

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+p workspace $ws11

assign [class="firefox"] $ws1
assign [class="Chromium"] $ws7
assign [class="Thunderbird"] $ws8
for_window [class="Spotify"] move to workspace $ws9
assign [class="TelegramDesktop"] $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Shift+p move container to workspace $ws11

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+c restart
bindsym $mod+Shift+r exec ~/dev/dotfiles/dotfiles.py install i3 && i3-msg restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+x exec ~/dev/dotfiles/i3shutdown.py

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym shift+h resize grow width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym shift+j resize shrink height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym shift+k resize grow height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt
        bindsym shift+l resize shrink width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# window colors
#                       border      background       text           indicator
client.focused          $black    {{mat_prim}}     {{mat_opri}}    $indicator
client.unfocused        $black    {{mat_secm}}     {{mat_osec}}    $indicator
client.focused_inactive $black    {{mat_secm}}     {{mat_osec}}    $indicator
client.urgent           $black    {{mat_errm}}     {{mat_oerr}}    $indicator
client.placeholder      $black    {{mat_secv}}     {{mat_osec}}    $indicator
client.background       $black

hide_edge_borders smart

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  strip_workspace_numbers yes
  output primary

  font pango:Noto Sans Mono,Material Design Icons, 8
  status_command i3blocks
  # want urgent to keep bar visible until checked, doesn't happen
  # mode hide
  # modifier $mod
  # want udiskie tray icon
  # tray_output none

  colors {
    background  {{mat_secm}}
    statusline  {{mat_osec}}
    separator   {{mat_osec}}
    
    #                      border          background        text
    focused_workspace    {{mat_prim}}     {{mat_prim}}      {{mat_opri}}
    active_workspace     {{mat_secm}}     {{mat_secm}}      {{mat_osec}}
    inactive_workspace   {{mat_secm}}     {{mat_secm}}      {{mat_osec}}
    urgent_workspace     {{mat_errm}}     {{mat_errm}}      {{mat_oerr}}
  }
}


# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
# bindsym XF86AudioPause exec playerctl pause
# bindsym XF86AudioNext exec playerctl next
# bindsym XF86AudioPrev exec playerctl previous

exec --no-startup-id ~/dev/dotfiles/tools/setup_capslock.sh

# powermate audo control: aur powermate-cli
exec --no-startup-id powermate

# try to fix autorandr not detecting setup at boot
exec --no-startup-id ~/dev/dotfiles/autorandr-startup.sh


exec --no-startup-id dunst -config ~/.config/dunst.cfg
exec --no-startup-id thunar --daemon
exec --no-startup-id picom --config ~/dev/dotfiles/picom.conf
exec --no-startup-id firefox
exec --no-startup-id thunderbird
exec --no-startup-id telegram-desktop
exec --no-startup-id spotify
# exec dropbox

# apply the background last, hopefully this fixes the bkg issue
# exec_always --no-startup-id ~/dev/dotfiles/bkg.py set
# try to move it to autorandr-setup.h

